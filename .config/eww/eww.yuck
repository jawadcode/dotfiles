(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (window_w)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :halign "end"
    (metric :label "🔊"
            :value volume
            :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%")
    (metric :label "🐏"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "🔋"
            :value battery
            :onchange "")
    time))

(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")
(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :class "workspaces"
         :space-evenly true
         :halign "start"
         :spacing 10
      (for workspace in workspaces
        (button :onclick "hyprctl dispatch workspace ${workspace.id}"
                :class "workspace ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
                "${workspace.id}")))))

(deflisten window :initial "..." "sh ~/.config/eww/scripts/get-window-title")
(defwidget window_w []
  (box :class "window-title"
       (label :text "${window}")))

(defwidget metric [label value onchange]
    (box :orientation "h"
         :class "metric"
         :space-evenly false
         (box :class "label" label)
         (scale :min 0
                :max 101
                :active {onchange != ""}
                :value value
                :onchange onchange)))

(defpoll volume :interval "0.5s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defpoll battery :interval "10s"
  "scripts/battery")

(defwindow bar1
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :stacking "bt"
  :exclusive true
  :focusable false
  (bar))

(defwindow bar2
  :monitor 1
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :stacking "bt"
  :exclusive true
  :focusable false
  (bar))